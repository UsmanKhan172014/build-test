{"version":3,"sources":["App.js","pages/Dashboard.js","pages/Login.js","index.js"],"names":["ZoomMtg","setZoomJSLib","preLoadWasm","prepareWebSDK","i18n","load","reload","App","sdkKey","meetingNumber","leaveUrl","userName","userEmail","className","onClick","e","preventDefault","fetch","method","headers","body","JSON","stringify","role","then","res","json","response","signature","document","getElementById","style","display","init","success","console","log","join","passWord","tk","error","catch","Login","router","createBrowserRouter","path","element","ReactDOM","render","StrictMode"],"mappings":"2PAMAA,UAAQC,aAAa,mCAAoC,OAEzDD,UAAQE,cACRF,UAAQG,gBAERH,UAAQI,KAAKC,KAAK,SAClBL,UAAQI,KAAKE,OAAO,SAmFLC,MAjFf,WAIE,IAKIC,EAAS,uCACTC,EANG,aAQHC,EAAW,wBACXC,EAAW,QACXC,EAAY,0BAwDhB,OACI,qBAAKC,UAAU,MAAf,SACE,iCACE,kDAEA,wBAAQC,QAtDhB,SAAsBC,GACpBA,EAAEC,iBAEFC,MAjBsB,+BAiBG,CACvBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBb,cAAeA,EACfc,KAlBK,MAoBNC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UACdF,MAAK,SAAAG,GAOZ,IAAsBC,IANDD,EAASC,UAO5BC,SAASC,eAAe,cAAcC,MAAMC,QAAU,QAEtDhC,UAAQiC,KAAK,CACXvB,SAAUA,EACVwB,QAAS,SAACA,GACRC,QAAQC,IAAIF,GAEZlC,UAAQqC,KAAK,CACXT,UAAWA,EACXnB,cAAeA,EACfE,SAAUA,EACVH,OAAQA,EACRI,UAAWA,EACX0B,SAhDC,MAiDDC,GAnCc,GAoCdL,QAAS,SAACA,GACRC,QAAQC,IAAIF,IAEdM,MAAO,SAACA,GACNL,QAAQC,IAAII,OAKlBA,MAAO,SAACA,GACNL,QAAQC,IAAII,SA/BTC,OAAM,SAAAD,GACXL,QAAQK,MAAMA,OAwCV,gC,wCCjFVxC,UAAQC,aAAa,mCAAoC,OAEzDD,UAAQE,cACRF,UAAQG,gBAERH,UAAQI,KAAKC,KAAK,SAClBL,UAAQI,KAAKE,OAAO,S,UCkJLoC,IChJTC,EAASC,YAAoB,CASjC,CACEC,KAAM,IACNC,QAAS,cAAC,EAAD,OAMbC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAgBN,OAAQA,MAE1Bd,SAASC,eAAe,W","file":"static/js/main.c2ba900e.chunk.js","sourcesContent":["import React from 'react';\n\nimport './App.css';\nimport { ZoomMtg } from '@zoomus/websdk';\nimport {useParams} from \"react-router-dom\";\n\nZoomMtg.setZoomJSLib('https://source.zoom.us/2.9.5/lib', '/av');\n\nZoomMtg.preLoadWasm();\nZoomMtg.prepareWebSDK();\n// loads language files, also passes any error messages to the ui\nZoomMtg.i18n.load('en-US');\nZoomMtg.i18n.reload('en-US');\n\nfunction App() {\n\n  // let {id,pass}= useParams()\n\n  let id='9551556055'\n  let pass='123'\n  // setup your signature endpoint here: https://github.com/zoom/meetingsdk-sample-signature-node.js\n  var signatureEndpoint = 'http://172.105.150.180:4500/'\n  // This Sample App has been updated to use SDK App type credentials https://marketplace.zoom.us/docs/guides/build/sdk-app\n  var sdkKey = 'waNRqHuuaViPpeuLoEYEbx3bXHynW8vQO3wp'\n  var meetingNumber = id\n  var role = 0\n  var leaveUrl = 'http://localhost:3000'\n  var userName = 'React'\n  var userEmail = 'usmankhan7419@gmail.com'\n  var passWord = pass\n  // pass in the registrant's token if your meeting or webinar requires registration. More info here:\n  // Meetings: https://marketplace.zoom.us/docs/sdk/native-sdks/web/client-view/meetings#join-registered\n  // Webinars: https://marketplace.zoom.us/docs/sdk/native-sdks/web/client-view/webinars#join-registered\n  var registrantToken = ''\n\n  function getSignature(e) {\n    e.preventDefault();\n\n    fetch(signatureEndpoint, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        meetingNumber: meetingNumber,\n        role: role\n      })\n    }).then(res => res.json())\n        .then(response => {\n          startMeeting(response.signature)\n        }).catch(error => {\n      console.error(error)\n    })\n  }\n\n  function startMeeting(signature) {\n    document.getElementById('zmmtg-root').style.display = 'block'\n\n    ZoomMtg.init({\n      leaveUrl: leaveUrl,\n      success: (success) => {\n        console.log(success)\n\n        ZoomMtg.join({\n          signature: signature,\n          meetingNumber: meetingNumber,\n          userName: userName,\n          sdkKey: sdkKey,\n          userEmail: userEmail,\n          passWord: passWord,\n          tk: registrantToken,\n          success: (success) => {\n            console.log(success)\n          },\n          error: (error) => {\n            console.log(error)\n          }\n        })\n\n      },\n      error: (error) => {\n        console.log(error)\n      }\n    })\n  }\n\n  return (\n      <div className=\"App\">\n        <main>\n          <h1>Join Meeting Now</h1>\n\n          <button onClick={getSignature}>Join Meeting</button>\n        </main>\n      </div>\n  );\n}\n\nexport default App;\n","import Cards from \"../components/Cards\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Welcome from \"../components/Welcome\";\n\nimport localforage from \"localforage\";\nimport { ZoomMtg } from \"@zoomus/websdk\";\n\nZoomMtg.setZoomJSLib('https://source.zoom.us/2.9.5/lib', '/av');\n\nZoomMtg.preLoadWasm();\nZoomMtg.prepareWebSDK();\n// loads language files, also passes any error messages to the ui\nZoomMtg.i18n.load('en-US');\nZoomMtg.i18n.reload('en-US');\n\nfunction Dashboard() {\n  const [data, setData] = useState([]);\n  // const [login, setLogin] = useState(false);\n  // const auth= Auth.isAuthenticated;\n  // console.log(auth);\n  // setLogin(Auth.isAuthenticated);\n  // // if (!login){\n  // //     window.location.href = \"/login\";\n  // // }\n\n  var signatureEndpoint = 'http://172.105.150.180:4500/'\n  const sdkKey = \"waNRqHuuaViPpeuLoEYEbx3bXHynW8vQO3wp\";\n  const [meetingNumber] = useState(\"9551556055\");\n  var role = 0;\n  var leaveUrl = \"http://localhost:3000\";\n  var [userName,setUserName] = useState(\"\");\n  var [userEmail,setUserEmail] = useState(\"\");\n  var [password] = useState(\"123\");\n  var registrantToken = \"\";\n    \n  const isAuthenticated = () => {\n    // localforage.getItem(\"auth\").then((value) => {\n    //   if (value === null) {\n    //     window.location.href = \"/login\";\n    //   }\n    // });\n    // // console.log(localforage.getItem(\"auth\"));\n  };\n\n  function getSignature(e) {\n    e.preventDefault();\n\n    fetch(signatureEndpoint, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        meetingNumber: meetingNumber,\n        role: role,\n      }),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        console.log(response);\n        startMeeting(response.signature);\n      })\n      .catch((error) => {\n        // console.error(error)\n        console.log(error);\n      });\n\n    // startMeeting(signatureEndpoint)\n  }\n\n  function startMeeting(signature) {\n    document.getElementById(\"zmmtg-root\").style.display = \"block\";\n\n    ZoomMtg.init({\n      leaveUrl: leaveUrl,\n      success: (success) => {\n        console.log(success);\n\n        ZoomMtg.join({\n          signature: signature,\n          meetingNumber: meetingNumber,\n          userName: userName,\n          sdkKey: sdkKey,\n          userEmail: userEmail,\n          passWord: password,\n          tk: registrantToken,\n          success: (success) => {\n            console.log(success);\n          },\n          error: (error) => {\n            console.log(error);\n          },\n        });\n      },\n      error: (error) => {\n        console.log(error);\n      },\n    });\n  }\n\n  useEffect(() => {\n    isAuthenticated();\n    axios\n      .get(\"https://superadmin.theskysportsnet.com/api/schedule/today\")\n      .then((response) => {\n        setData(response.data);\n        console.log(response.data);\n        // setMeetingNumber(response.data[0].meeting_id);\n        // setPassword(response.data[0].password);\n        // localforage.getItem(\"auth\").then((value) => {\n        //     setUserName(value.name);\n        //     setUserEmail(value.email);\n        //     }\n        // );\n\n        setUserName(\"test\");\n        setUserEmail(\"test@gmail.com\");\n\n\n        \n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      {/*<Welcome remaining={1333} />*/}\n      {/*<div className=\"row\">*/}\n      {/*  <div className=\"col-md-12 text-center\">*/}\n      {/*    <button onClick={getSignature} className=\"btn btn-danger\">Join Meeting</button>*/}\n      {/*  </div>*/}\n      {/*</div>*/}\n      <div className=\"row justify-content-center\">\n        {data.map((item, index) => {\n          return <Cards item={item} key={item.meeting_id} />;\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import Auth from \"../data/auth\"\nimport localforage from \"localforage\";\nimport axios from \"axios\";\nimport {useEffect, useState} from \"react\";\n\nfunction Login() {\n\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    // console.log(Auth.isAuthenticated);\n    async function signIn(e) {\n\n        e.preventDefault();\n\n        if(username===\"\" || password===\"\"){\n            alert(\"Please fill all the fields\");\n            return;\n        }\n\n        const response =await axios.post(\"https://superadmin.theskysportsnet.com/api/login\", {\n            username: username,\n            password: password,\n            mac: \"00:00:00:00:00:00\"\n        }).catch((error) => {\n            alert(\"Invalid Credentials\");\n            return;\n        })\n        // console.log(response?.data[0]?.error);\n\n        if (response?.data[0]?.error){\n            alert(response?.data[0]?.message)\n        }\n        else{\n            //current date\n            const date = new Date();\n            const expiry = new Date(response?.data?.customer?.expiry)\n            console.log(expiry);\n            //difference in days\n            const diff = Math.ceil((expiry - date) / (1000 * 60 * 60 * 24));\n            console.log(diff);\n\n            console.log((expiry-date)/(1000*60*60*24));\n            const days=(expiry-date)/(1000*60*60*24);\n            //split whole and decimal part from days\n            const daysLeft= Math.floor(days);\n            console.log(daysLeft);\n\n\n            //store decimal from days in new variable\n\n            const decimal=days%1;\n            console.log(decimal);\n            //convert decimal to hours\n            const hours=decimal*24;\n            //slice hours upto two decimal places\n            const hours2=hours.toFixed(2);\n            console.log(hours2);\n\n\n            console.log(hours);\n\n\n            //difference in days and hours\n            // const diffInHours = Math.ceil((expiry - date) / (1000 * 60 * 60));\n            // console.log(diffInHours);\n            console.log(response?.data?.customer);\n            Auth.isAuthenticated=true;\n            Auth.user.id=response?.data?.customer?.id;\n            Auth.user.name=response?.data?.customer?.name;\n            Auth.user.remainingDays=response?.data?.customer?.expiry;\n\n            localforage.setItem(\"auth\", Auth).then((value) => {\n              console.log(value);\n            });\n            window.location.href = \"/\";\n\n\n        }\n\n        // if (response.data.status === \"success\") {\n        //\n        // }\n\n        // Auth.isAuthenticated = true;\n        // Auth.user.name = \"John Doe\";\n        // Auth.user.role = \"admin\";\n        // Auth.user.id = 1;\n        // Auth.user.remainingDays = 1333;\n        // // console.log(Auth.isAuthenticated);\n        // //\n        // localforage.setItem(\"auth\", Auth).then((value) => {\n        //     console.log(value);\n        // });\n        //\n        //\n        // console.log(localforage.getItem(\"auth\"));\n        // window.location.href = \"/\";\n    }\n\n    useEffect(() => {\n        \n        localforage.getItem(\"auth\").then((value) => {\n          console.log(value?.Auth);\n            if (value!==null && value?.Auth.isAuthenticated){\n              \n                window.location.href = \"/\";\n            }\n            \n        })\n        console.log(localforage.getItem(\"auth\"));\n    }, [])\n\n\n  return (\n    <div className=\"container\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-md-6\">\n            <div className=\" text-center\">\n            <h1>Login</h1>\n\n            </div>\n          \n          <form>\n            <div className=\"form-group\">\n              <label >Email address</label>\n              <input\n                type=\"text\"\n                onChange={(e) => setUsername(e.target.value)}\n                className=\"form-control\"\n                id=\"username\"\n                placeholder=\"Enter your username\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label >Password</label>\n              <input\n                type=\"password\"\n                onChange={(e) => setPassword(e.target.value)}\n                className=\"form-control\"\n                id=\"password\"\n                placeholder=\"Enter your password\"\n              />\n            </div>\n            <div className=\"form-group mt-2 text-center\">\n              {/* <button type=\"submit\" className=\"btn btn-primary\">\n                Login\n              </button> */}\n\n\n                <button className=\"btn btn-primary\" onClick={signIn}>\n                    Login</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {\n  createBrowserRouter,\n  RouterProvider,\n} from \"react-router-dom\";\n\nimport Dashboard from \"./pages/Dashboard\";\nimport Login from \"./pages/Login\";\n\n\n\nconst router = createBrowserRouter([\n  // {\n  //   path: \"/\",\n  //   element: <Dashboard/>,\n  // },\n  // {\n  //   path: \"/login\",\n  //   element: <Login/>,\n  // },\n  {\n    path: \"/\",\n    element: <App/>,\n  }\n\n]);\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <RouterProvider router={router} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}